@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Shared.cshtml";
    User loggedUser = (User)Session["loggedUser"];
    bool canCreateEditDelete;
    if (loggedUser == null)
    {
        canCreateEditDelete = false;
    }
    else
    {
        canCreateEditDelete = new RailwaySystem.Repositories.UsersRepository()
                                  .CanAccess(loggedUser.Id, RailwaySystem.Repositories.UsersRepository.Levels.FULL_ACCESS);
    }

}
@model RailwaySystem.ViewModels.Schedule.SearchVM

<script type="text/javascript" src="~/Scripts/RSScripts/track-scripts.js">

</script>

<fieldset class="wrapper container">

    <div class="grid">
        <div class="row border border-3 pl-3 pt-3 pb-3 bg-white d-flex justify-content-center">
            <div>
            </div>
        </div>
        <form action="/Schedule/Index" method="post">
            <div class="row bg-dark d-flex justify-content-center">
                <div class="col-md-2 p-3">
                    <p class="text-white">Departs from</p>
                    @Html.DropDownListFor(m => m.StartStationId, new SelectList((List<Station>)ViewData["stations"], "Id", "Name"), "-- Select --", new { @class = "form-control" })
                    <p style="color:red">@Html.ValidationMessageFor(m => m.StartStationId)</p>
                </div>
                <div class="col-md-2 p-3">
                    <p class="text-white">Arrives at</p>
                    @Html.DropDownListFor(m => m.EndStationId, new SelectList((List<Station>)ViewData["stations"], "Id", "Name"), "-- Select --", new { @class = "form-control" })
                    <p style="color:red">@Html.ValidationMessageFor(m => m.EndStationId)</p>
                </div>
                <div class="col-md-3 p-3">
                    <p class="text-white">Date</p>
                    @Html.TextBoxFor(m => m.DepartureDate, new { @type = "date", @class = "form-control date-picker" })
                    <p style="color:red">@Html.ValidationMessageFor(m => m.DepartureDate)</p>
                    <p style="color:red">@Html.ValidationMessage("InvalidDateError")</p>
                </div>
                <div class="col-md-1 p-2">
                    <input class="btn btn-info p-2 m-1" type="submit" value="Search" />
                    <a href="/Schedule/Index" class="btn btn-light m-1">Clear</a>
                </div>
            </div>
        </form>
    </div>


    @if (Model != null)
    {
        <div class="card bg-light shadow m-3 p-3">
            <div class="grid">
                @if (((List<RailwaySystem.ViewModels.Schedule.ListItemVM>)ViewData["items"]).Count > 0)
                {
                    <div class="row">
                        <div class="col-lg-12">
                            <h3 class="text-center">Results for @(Model.DepartureDate.ToString("d.MM.yyyy (dddd)"))</h3>
                        </div>
                    </div>
                }


                <div class="row m-3">
                    @Html.ValidationMessage("NoRecordsFound")
                </div>

                @foreach (var item in (List<RailwaySystem.ViewModels.Schedule.ListItemVM>)ViewData["items"])
                {
                    <div class="m-3 border border-1 rounded p-3">
                        <div class="row">
                            <div class="col-lg-3 m-1">
                                <img src="~/Content/icons/train-30.png" title="Train" />
                                @(item.Train)
                            </div>
                            <div class="col-lg-3 m-1">
                                <img src="~/Content/icons/right-arrow-30.png" title="Departs at" />
                                @(  (item.Departure.ToString("HH:mm")) + " - " + (item.Arrival.ToString("HH:mm")) )
                            </div>
                            <div class="col-lg-2 m-1">
                                <img src="~/Content/icons/time-30.png" title="Travel Time" />
                                @( (item.Arrival - item.Departure).ToString(@"hh\:mm") )
                            </div>

                            <div class="col-lg-2 m-1">
                                @( !item.Schedule.Cancelled && (int)ViewData["freeSeats" + item.Schedule.Id] > 0 ? (int)ViewData["freeSeats" + item.Schedule.Id] + " free seat(s)" : "no free seats")
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-lg-4">
                                @(item.Route)
                            </div>

                            <div class="col-lg-4">
                                <button class="btn btn-clear bg-light ml-1" onclick="ToggleRouteTable('@("route-table-" + item.Schedule.Id)');">Full route</button>
                            </div>

                            @if (!item.Schedule.Cancelled)
                            {
                                <div class="col-lg-4 m-1">
                                    <a class="btn btn-success" href="/Ticket/Buy?id=@(item.Schedule.Id)&ssid=@(Model.StartStationId)&esid=@(Model.EndStationId)">
                                        Buy E-Ticket
                                    </a>
                                </div>
                            }
                            else
                            {
                                <div>
                                    <p style="color: red;">Cancelled</p>
                                </div>
                            }

                            @if (canCreateEditDelete)
                            {
                                <div class="col-lg-2 m-1">
                                    <a href="/Schedule/Edit?id=@(item.Schedule.Id)">
                                        <img src="~/Content/icons/edit-30.png" title="Edit" />
                                    </a>
                                </div>
                            }
                        </div>
                        <div class="row">
                            <div class="col-lg-12 m-1" id=@("route-table-" + item.Schedule.Id) hidden>

                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Arrives</th>
                                            <th>Station Name</th>
                                            <th>Departs</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var sws in item.ScheduledWayStations)
                                        {
                                            <tr>
                                                <td>@(sws.Arrival.Equals(new DateTime()) ? "" : sws.Arrival.ToString("HH:mm") )</td>
                                                <td>@(sws.StationName)</td>
                                                <td>@(sws.Departure.Equals(new DateTime()) ? "" : sws.Departure.ToString("HH:mm") )</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>

                }
            </div>
        </div>
    }
</fieldset>

