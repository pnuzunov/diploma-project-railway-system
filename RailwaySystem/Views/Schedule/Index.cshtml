@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Shared.cshtml";
    User loggedUser = (User)Session["loggedUser"];
    bool canCreateEditDelete;
    if (loggedUser == null) {
        canCreateEditDelete = false;
    } else
    {
        canCreateEditDelete = new RailwaySystem.Repositories.UsersRepository()
                                  .CanAccess(loggedUser.Id, RailwaySystem.Repositories.UsersRepository.Levels.FULL_ACCESS);
    }

}
@model RailwaySystem.ViewModels.Schedule.ListVM

<fieldset class="wrapper container">
    <div class="grid">
        <div class="row border border-3 pl-3 pt-3 pb-3 bg-white">
            <div class="col-2">
                Station to depart
            </div>
            <div class="col-2">
                Station to arrive
            </div>
            <div class="col-2">
                Date
            </div>
        </div>
        <div class="row bg-white">
            <div class="col-2">
                @Html.ValidationMessageFor(m => m.StartStationId)
            </div>
            <div class="col-2">
                @Html.ValidationMessageFor(m => m.EndStationId)
            </div>
            <div class="col-2">
                @Html.ValidationMessageFor(m => m.DepartureDate)
            </div>
        </div>
        <form action="/Schedule/Index" method="post">
            <div class="row bg-dark">
                <div class="col-2 p-3">
                    @Html.DropDownListFor(m => m.StartStationId, new SelectList((List<Station>)ViewData["stations"], "Id", "Name"), "-- Select --", new { @class = "form-control" })
                </div>
                <div class="col-2 p-3">
                    @Html.DropDownListFor(m => m.EndStationId, new SelectList((List<Station>)ViewData["stations"], "Id", "Name"), "-- Select --", new { @class = "form-control" })
                </div>
                <div class="col-3 p-3">
                    @Html.TextBoxFor(m => m.DepartureDate, new { @type = "datetime-local", @class = "form-control date-time-picker" })
                </div>
                <div class="col-1 p-2 d-flex">
                    <input class="btn btn-light p-2 mr-2" type="submit" value="Search" />
                    <a href="/Schedule/Index" class="btn btn-light">Clear</a>
                </div>
            </div>
        </form>
    </div>

    @if (Model != null)
    {
<div class="card bg-light shadow m-3 p-3">
    <div class="grid bold">
        <div class="row">
            <div class="col-2">
                Train
            </div>
            <div class="col-2">
                Departure
            </div>
            <div class="col-2">
                Arrival
            </div>
            <div class="col-2">
                Travel Time
            </div>
            <div class="col-2">
                Route
            </div>
        </div>
    </div>
    <hr />
    <div class="grid">

        @foreach (var item in (List<Schedule>)ViewData["items"])
        {
        <div class="row m-3">
            @foreach (var train in (List<Train>)ViewData["trains"])
            {

                if (train.Id == item.TrainId)
                {
                    foreach (var trainType in (List<TrainType>)ViewData["trainTypes"])
                    {
                        if (trainType.Id == train.TypeId)
                        {
                            <div class="col-2">
                                @(train.Name) (@(trainType.Name))
                            </div>
                            break;
                        }
                    }

                }
            }

            <div class="col-2">
                @(item.Departure.ToString("HH:mm"))
            </div>
            <div class="col-2">
                @(item.Arrival.ToString("HH:mm"))
            </div>
            <div class="col-2">
                @((item.Arrival - item.Departure).Hours) hour(s) @((item.Arrival - item.Departure).Minutes) minute(s)
            </div>

            @foreach (var route in (Dictionary<int, string>)ViewData["routes"])
            {
                if (route.Key == item.TrackId)
                {

                    <div class="col-2">
                        @(route.Value)
                    </div>
                    break;
                }
            }
            @if (canCreateEditDelete)
            {
                <div class="col-1">
                    <a href="/Schedule/Edit?id=@(item.Id)">Edit...</a>
                </div>
                <div class="col-1">
                    <a href="/Schedule/Delete?id=@(item.Id)">Delete</a>
                </div>
            }
            <div class="col-1">
                <a href="/Ticket/Buy?id=@(item.Id)&dt=@(Model?.DepartureDate.Date.ToString("dd-MM-yyyy") + "-" + item.Departure.ToString("HH-mm"))">Ticket</a>
            </div>
        </div>
        }
    </div>
    @if (canCreateEditDelete)
    {
        <div>
            <a href="/Schedule/Create">Create New...</a>
        </div>
    }


</div>
    }
</fieldset>

